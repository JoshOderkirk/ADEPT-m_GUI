function [hAdvMenu,misc,mesh] = openAdvMenu(devObj, newCheck,newCheck2)

%misc.num = layerNum;
%mesh.num = meshnum;

% create and then hide the UI as it is being constructed ------------------
hAdvMenu = figure('Visible', 'off', ...
    'Position', [775, 50, 750, 775], ...
    'Name', 'Set Advanced Parameters', ...
    'NumberTitle', 'off', ...
    'MenuBar', 'none', ...
    'Units', 'normalized', ...
    'ToolBar', 'none');


hAdvTabs = uitabgroup(hAdvMenu);

hMiscTab = uitab(hAdvTabs, 'Title', 'Miscellaneous Parameters');
hMeshTab = uitab(hAdvTabs, 'Title', 'Mesh Parameters');

% Set object parameters if device is new or being edited ------------------
if newCheck || newCheck2 == 1
    setParams(0, 0, 0); %first zero means nothing but is necessary
else
    setParams(0, 0, 2);
end 

% Construct the UI --------------------------------------------------------
% All Tabs

% Basic Section of Basic Parameters Tab

hElecAffText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Electron Affinity', ...
    'Position', [15, 735, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hElecAffEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '4', ...
    'Position', [15, 710, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateElecAff);

hRefBandText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Reference conduction band effective density-of-states', ...
    'Position', [15, 735, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hRefBandEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e19', ...
    'Position', [15, 710, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateRefBand);

hRefValBandText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Reference valence band effective density-of-states', ...
    'Position', [15, 735, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hRefValBandEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e19', ...
    'Position', [15, 710, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateRefValBand);


hRefValBandText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Reference valence band effective density-of-states', ...
    'Position', [15, 735, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hRefValBandEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1', ...
    'Position', [15, 710, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateRefValBand);

hRefBandgapText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Reference bandgap', ...
    'Position', [15, 690, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hRefBandgapEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '10', ...
    'Position', [15, 670, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateRefBandgapEdit);

hRefDielecText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Reference dielectric constant', ...
    'Position', [15, 650, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hRefDielecEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '-999', ...
    'Position', [15, 620, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateRefDielecEdit);

hfdText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Fermi-Dirac statistics:', ...
    'Position', [15, 590, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hfdEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', 'off', ...
    'Position', [15, 570, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdatefdEdit);

hMaxit = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Maximum # of iterations for equilibrium solver', ...
    'Position', [15, 540, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxitEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '100', ...
    'Position', [15, 510, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxitEdit);

hMaxError = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Maximum error for equilibrium solver', ...
    'Position', [15, 490, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxErrorEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e-6', ...
    'Position', [15, 460, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxErrorEdit);

hMaxNumIt = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Maximum # of iterations for nonequilibrium solver', ...
    'Position', [15, 430, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxNumItEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '100', ...
    'Position', [15, 390, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxNumItEdit);

hMaxErrorNoneq = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', 'Maximum # of iterations for nonequilibrium solver', ...
    'Position', [15, 370, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxErrorNoneqEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e-6', ...
    'Position', [15, 340, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxErrorNoneqEdit);


hSigDigitsText = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Show estimated number of significant digits in error', ...
    'Position', [15, 310, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hSigDigitsEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', 'off', ...
    'Position', [15, 290, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateSigDigitsEdit);

hMaxErrorSetup = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Maximum error during setup', ...
    'Position', [15, 270, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxErrorSetupEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e-4', ...
    'Position', [15, 250, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxErrorSetupEdit);

hScaleFactor = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Scaling factor for generation rate', ...
    'Position', [15, 230, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hScaleFactorEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1e-3', ...
    'Position', [15, 200, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateScaleFactorEdit);

hSmallDoping = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Smallest doping concentration (prevents division by zero)', ...
    'Position', [15, 170, 125, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hSmallDopingEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '1', ...
    'Position', [15, 150, 125, 20], ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized', ...
    'Callback', @UpdateSmallDopingEdit);

hNumConsec = uicontrol(hMiscTab, ...
    'Style', 'text', ...
    'String', 'Number of consecutive times correction term can increase before solution is assumed to diverge', ...
    'Position', [15, 100, 225, 50], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hNumConsecEdit = uicontrol(hMiscTab, ...
    'Style', 'edit', ...
    'String', '5', ...
    'Position', [15, 70, 125, 20], ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized', ...
    'Callback', @UpdateNumConsecEdit);

%Mesh Tab

hMeshGenText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Mesh generation method', ...
    'Position', [15, 730, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMeshGenDropdown = uicontrol(hMeshTab, ...
    'Style', 'popupmenu', ...
    'String', {'auto', 'uniform','Adebug'}, ...
    'Position', [15, 700, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMeshGen);

hMeshPointText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Maximum number of mesh points', ...
    'Position', [15, 670, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMeshPointEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '100000', ...
    'Position', [15, 640, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMeshPoint);

hSmallMeshText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Smallest allowed mesh spacing', ...
    'Position', [15, 610, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hSmallMeshEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '1e-8', ...
    'Position', [15, 580, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateSmallMesh);


hLargeMeshText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Largest allowed mesh spacing', ...
    'Position', [15, 550, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hLargeMeshEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '-1', ...
    'Position', [15, 520, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateLargeMesh);

hMaxRatioMeshText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Maximum spacing ratio between adjacent mesh spaces', ...
    'Position', [15, 490, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxRatioMeshEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '2', ...
    'Position', [15, 460, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxRatioMesh);

hMaxDRatioText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Maximum D-field ratio between adjacent mesh spaces', ...
    'Position', [15, 430, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hMaxDRatioEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '2', ...
    'Position', [15, 400, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateMaxDRatio);

hSharpTransText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'Sharp transistions between layers', ...
    'Position', [15, 370, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hSharpTransEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', 'on', ...
    'Position', [15, 340, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateSharpTrans);

hDFieldText = uicontrol(hMeshTab, ...
    'Style', 'text', ...
    'String', 'D-field theshold', ...
    'Position', [15, 310, 210, 20], ...
    'FontSize', 12, ...
    'BackgroundColor', 'c', ...
    'HorizontalAlignment', 'left', ...
    'Units', 'normalized');

hDFieldEdit = uicontrol(hMeshTab, ...
    'Style', 'edit', ...
    'String', '1', ...
    'Position', [15, 280, 150, 20], ...
    'HorizontalAlignment', 'left', ...
    'Value', 1, ...
    'Units', 'normalized', ...
    'Callback', @UpdateDField);


% Initialize the UI. ------------------------------------------------------
    device = Adept;
% make UI visible
hAdvMenu.Visible = 'on';

function UpdateElecAff(hObject, ~)

        % Sets the adept device model name to the entered string
        %devObj.model = hObject.String;
      
      
    global data_list2
        % Sets the adept device model name to the selected string
        misc.ref_chi = hObject.String{hObject.Value};
          data_list2(5) = misc.ref_chi;

 end

function UpdateRefBand(hObject, ~)
    data_list2(5) = hObject.String;
end

function UpdateRefValBand(hObject,~)
    misc.ref_chi = str2double(hObject.String);
        disp(['Reference valence band effective density-of-states: ' sprintf('%.2f', top.chi)]);
     data_list2(6) = misc.ref_chi;

end
    


function UpdateRefBandgapEdit(hObject,~)
     misc.ref_Nv = str2double(hObject.String);
        disp(['Reference valence band effective density-of-states ', ...
            sprintf('%.2E', misc.ref_Nv)]);
            data_list2(9) = misc.ref_Nv;
    
end 
    function UpdateRefDielecEdit(hObject,~)
        misc.ref_ks = str2double(hObject.String);
        disp(['Reference dielectric constant ', ...
            sprintf('%.2E', misc.ref_ks)]);
    end


    function UpdatefdEdit(hObject,~)
        misc.fdflag = str2double(hObject.String);
        disp(['Fermi-Dirac statistics flag: ', ...
            sprintf('%.2E',  misc.fdflag)]);
    end

   function UpdateMaxitEdit(hObject,~)
        misc.itmaxq = str2double(hObject.String);
        disp(['Maximum # of iterations for equilibrium solver: ', ...
            sprintf('%.2E',  misc.itmaxq)]);
   end

   function UpdateMaxErrorEdit(hObject,~)
        misc.deltaq = str2double(hObject.String);
        disp(['Maximum error for equilibrium solver: ', ...
            sprintf('%.2E',  misc.deltaq)]);
   end

   function UpdateMaxNumItEdit(hObject,~)
        misc.itmax = str2double(hObject.String);
        disp(['Maximum # of iterations for nonequilibrium solver: ', ...
            sprintf('%.2E',  misc.itmax)]);
   end

   function UpdateMaxErrorNoneqEdit(hObject,~)
        misc.delta = str2double(hObject.String);
        disp(['Maximum error for nonequilibrium solver: ', ...
            sprintf('%.2E',  misc.delta)]);
   end

   function UpdateSigDigitsEdit(hObject,~)
        misc.show_sig = str2double(hObject.String);
        disp(['Show estimated number of significant digits in error: ', ...
            sprintf('%.2E',  misc.show_sig)]);
   end

   function UpdateMaxErrorSetupEdit(hObject,~)
        misc.delta_setup = str2double(hObject.String);
        disp(['Maximum error during setup: ', ...
            sprintf('%.2E',  misc.delta_setup)]);
   end

   function UpdateScaleFactorEdit(hObject,~)
        misc.delta_scaleG = str2double(hObject.String);
        disp(['Scaling factor for generation rate: ', ...
            sprintf('%.2E',  misc.delta_scaleG)]);
   end

   function UpdateSmallDopingEdit(hObject,~)
        misc.min_N = str2double(hObject.String);
        disp(['Smallest doping concentration (prevents division by zero ', ...
            sprintf('%.2E',  misc.min_N)]);
   end

function UpdateNumConsecEdit(hObject,~)
        misc.ndiv = str2double(hObject.String);
        disp(['Number of consecutive times correction term can increase before solution is assumed to diverge ', ...
            sprintf('%.2E',  misc.ndiv)]);
    end
        
    %Mesh CallBacks
    
function UpdateMeshGen(hObject, ~)
end

function UpdateMeshPoint(hObject, ~)
end

function UpdateSmallMesh(hObject, ~)
end

function UpdateLargeMesh(hObject, ~)
end

function UpdateMaxRatioMesh(hObject, ~)
end

function UpdateMaxDRatio(hObject, ~)
end

function UpdateSharpTurns(hObject, ~)
end

function UpdateDField(hObject, ~)
end

    % Create Utility functions
    function setParams(~,~,mode)
        % INPUTS: ~ means that an input is passed that is unnecessary.
        % These are automatic inputs cause by using the function in a
        % callback. Mode having the following inputs means the following: 
        % 0: The layer is completely new and is being generated with defaults.
        % 1: The layer is being reset to the default parameters by the user.
        % 2: The layer is loading the paramters of a previously defined
        % layer (Assuming only one exists).
        
        % update adept obj params
        if mode < 2
            misc.ref_chi = 4;
            misc.ref_Nc = 1e19;
            misc.ref_Nv = 1e19;
            misc.ref_Eg = 1;
            misc.ref_ks = 10;
            misc.fdflag = 'off';
            misc.itmaxq = 100;
            misc.deltaq = 1e-6;
            misc.itmax = 100;
            misc.delta = 1e-6;
            misc.show_sig = 'off';
            misc.delta_setup = 1e-4;
            misc.delta_scaleG = 1e-3;
            misc.min_N = 1;
            misc.ndiv = 5;
            mesh.meth = 'auto';
            mesh.nx = 100000;
            mesh.h_min_cm = 1e-8;
            mesh.h_max_cm = -1;
            mesh.h_ratio = 2;
            mesh.D_ratio = 2;
            mesh.sharp = 'on';
            mesh.D_thr = 1;
           
           

        else %mode = 2
            % How does adept obj store multiple layers??
            % layer.chi = devObj.semi(layer.num).chi;
      
           
            misc.ref_chi = devObj.misc.ref_chi;
            misc.ref_Nc = devObj.misc.ref_Nc;
            misc.ref_Nv = devObj.misc.ref_Nv;
            misc.ref_Eg = devObj.misc.ref_Eg;
            misc.ref_ks = devObj.misc.ref_ks;
            misc.fdflag = devObj.misc.fdflag;
            misc.itmaxq = devObj.misc.itmaxq;
            misc.deltaq = devObj.misc.deltaq;
            misc.itmax = devObj.misc.itmax;
            misc.delta = devObj.misc.delta;
            misc.show_sig = devObj.misc.show_sig;
            misc.delta_setup = devObj.misc.delta_setup;
            misc.delta_scaleG = devObj.misc.delta_scaleG;
            misc.min_N = devObj.misc.min_N;
            misc.ndiv = devObj.misc.ndiv; 
            mesh.meth = devObj.mesh.meth; 
            mesh.nx = devObj.mesh.nx; 
            mesh.h_min_cm = devObj.mesh.h_min_cm; 
            mesh.h_max_cm = devObj.mesh.h_max_cm; 
            mesh.h_ratio = devObj.mesh.h_ratio; 
            mesh.D_ratio = devObj.mesh.D_ratio; 
            mesh.sharp = devObj.mesh.sharp; 
            mesh.D_thr = devObj.mesh.D_thr;             
            
        end
        
        if mode > 0
            % update visuals
             UpdateElecAff.String = sprintf('%.2f', misc.ref_chi);
             UpdateRefBand.String = sprintf('%.2f', misc.ref_Nc);
             UpdateRefValBand.String = sprintf('%.2f', misc.ref_Nv);
             UpdateRefBandgapEdit.String = sprintf('%.2f', misc.ref_Eg);
             UpdateRefDielecEdit.String = sprintf('%.2f', misc.ref_ks);
             UpdatefdEdit.String = sprintf('%.2f', misc.fdflag);
             UpdateMaxitEdit.String = sprintf('%.2f', misc.itmaxq);
             UpdateMaxErrorEdit.String = sprintf('%.2f', misc.deltaq);
             UpdateMaxNumItEdit.String = sprintf('%.2f', misc.itmax);
             UpdateMaxErrorNoneqEdit.String = sprintf('%.2f', misc.delta);
             UpdateSigDigitsEdit.String = sprintf('%.2f', misc.show_sig);
             UpdateMaxErrorSetupEdit.String = sprintf('%.2f', misc.delta_setup);
             UpdateScaleFactorEdit.String = sprintf('%.2f', misc.delta_scaleG);
             UpdateSmallDopingEdit.String = sprintf('%.2f', misc.min_N);
             UpdateNumConsecEdit.String = sprintf('%.2f', misc.ndiv);
             UpdateMeshGen.String = sprintf('%.2f', mesh.meth);
             UpdateMeshPoint.String = sprintf('%.2f', mesh.nx);
             UpdateSmallMesh.String = sprintf('%.2f', mesh.h_min_cm);
             UpdateLargeMesh.String = sprintf('%.2f', mesh.h_max_cm);
             UpdateMaxRatioMesh.String = sprintf('%.2f', mesh.h_ratio);
             UpdateMaxDRatio.String = sprintf('%.2f', mesh.D_ratio);
             UpdateSharpTrans.String = sprintf('%.2f', mesh.sharp);
             UpdateDField.String = sprintf('%.2f', mesh.D_thr);


        end
    end
    
end